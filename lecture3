#!/usr/bin/env python
# coding: utf-8

# <h1>Task 1</h1>
# <p> importing the file from pc</p>
# <p> this code : df.drop(df.loc[df['Borough']=='Not assigned'].index, inplace=True)
#          deletes the rows of postal code that have no borough"</p>

# In[46]:


import numpy as np
import pandas as pd
import matplotlib as mplq
import matplotlib.pyplot as plt


df = pd.read_excel (r'C:\Users\user\OneDrive\Desktop\Book3.xlsx')



df.drop(df.loc[df['Borough']=='Not assigned'].index, inplace=True)


df_1=df.reset_index(drop=True)
df_1.head(15)


# <h2>using .shape code</h2>

# In[29]:


df_1.shape


# <h1> task 2</h1>

# In[52]:



df = pd.read_excel (r'C:\Users\user\OneDrive\Desktop\Book3.xlsx')



df.drop(df.loc[df['Borough']=='Not assigned'].index, inplace=True)


df_1=df.reset_index(drop=True)
dfg = pd.read_excel (r'C:\Users\user\OneDrive\Desktop\Geospatial_Coordinates.xlsx')
dfm=df_1.merge(dfg, on='Postal Code', how='left')
dfm.head(15)


# <h1> task 3</h1>
# <p>this code shows the cordinates of a neighborhood latitude and longtitude and the map</p>

# In[16]:


#!conda install -c conda-forge folium=0.5.0 --yes # uncomment this line if you haven't completed the Foursquare API lab
import folium
#!conda install -c conda-forge geopy --yes #com
import geopy
import pandas as pd
#!conda install -c conda-forge geopy --yes # uncomment this line if you haven't completed the Foursquare API lab
from geopy.geocoders import Nominatim
column_names = ['Borough', 'Neighborhood', 'Latitude', 'Longitude']

# instantiate the dataframe
neighborhoods = pd.DataFrame(columns=column_names)


address = 'Malvern, Rouge'

geolocator = Nominatim(user_agent="to_explorer")
location = geolocator.geocode(address)
latitude = location.latitude
longitude = location.longitude
print('The geograpical coordinate of Malvern, Rouge	  are {}, {}.'.format(latitude, longitude))
map_toronto = folium.Map(location=[latitude, longitude], zoom_start=10)

# add markers to map
for lat, lng, borough, neighborhood in zip(neighborhoods['Latitude'], neighborhoods['Longitude'], neighborhoods['Borough'], neighborhoods['Neighborhood']):
    label = '{}, {}'.format(neighborhood, borough)
    label = folium.Popup(label, parse_html=True)
    folium.CircleMarker(
        [lat, lng],
        radius=5,
        popup=label,
        color='blue',
        fill=True,
        fill_color='#3186cc',
        fill_opacity=0.7,
        parse_html=False).add_to(map_toronto)
map_toronto
